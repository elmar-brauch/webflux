logging.level.de.bsi=DEBUG
# Set logging level to DEBUG to see more communiction details between client and backend.
logging.level.org=INFO
logging.level.org.mongodb=DEBUG
logging.level.org.springframework.cache=TRACE
logging.pattern.console = %d{HH:mm:ss} %-10.35logger{45} - %msg%n

# Connection to Mongo database and Docker command to start a Mongo instance.
# docker run -d -p 27017:27017 --name mongodb mongo
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=local

# Connection to Redis cache server and Docker command to start it.
# docker run -d -p 6379:6379 --name redisdb redis redis-server --requirepass "geheim"
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=geheim
spring.data.redis.timeout=5000
spring.cache.type=redis

# Client configuration for OAuth2 secured REST-service
geo-api.oauth2.serviceBaseUrl=https://api.server.de/geographicAddressManagement
geo-api.oauth2.tokenUri=https://token.server.de/openid-connect/token
geo-api.oauth2.clientId=api-consumer
geo-api.oauth2.clientSecret=xxx
